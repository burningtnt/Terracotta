name: Rust-Cargo Build

on:
  push:
    paths-ignore:
      - 'sites/**'
      - '.github/workflows/docs.yml'
  workflow_dispatch:
    inputs:
      version:
        description: Terracotta Version
        type: string

env:
  CARGO_TERM_COLOR: always
  name: "terracotta"
  RUST_BACKTRACE: "full"

defaults:
  run:
    shell: "bash"

jobs:
  windows-x86_64:
    runs-on: windows-latest
    name: Build for Windows x86_64
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install GitHub Artifact Client
        uses: lhotari/gh-actions-artifact-client@v2
      - name: Compute Version
        run: |
          if [ -z "${{ github.event.inputs.version }}" ]; then
            echo "TERRACOTTA_VERSION=${GITHUB_SHA::7}" >> $GITHUB_ENV
          else
            echo "TERRACOTTA_VERSION=${{ github.event.inputs.version }}" >> $GITHUB_ENV
          fi
      - name: Build
        run: |
          rustup target add --toolchain nightly x86_64-pc-windows-msvc
          rustup component add rust-src --toolchain nightly-x86_64-pc-windows-msvc
          cargo +nightly build --release \
            -Z build-std=core,std,alloc,proc_macro,panic_abort \
            -Z build-std-features=default,panic_immediate_abort,optimize_for_size
      - name: Upload Artifact
        run: |
          source="terracotta-${TERRACOTTA_VERSION}-windows-x86_64.exe"
          cp "target/release/terracotta.exe" "$source"
          tar acvf "$source.tar" "$source"
          cat "$source.tar" | gh-actions-artifact-client.js upload "$source"
  windows-arm64:
    runs-on: windows-11-arm
    name: Build for Windows arm64
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install GitHub Artifact Client
        uses: lhotari/gh-actions-artifact-client@v2
      - name: Compute Version
        run: |
          if [ -z "${{ github.event.inputs.version }}" ]; then
            echo "TERRACOTTA_VERSION=${GITHUB_SHA::7}" >> $GITHUB_ENV
          else
            echo "TERRACOTTA_VERSION=${{ github.event.inputs.version }}" >> $GITHUB_ENV
          fi
      - name: Build
        run: |
          rustup target add --toolchain nightly aarch64-pc-windows-msvc
          rustup component add rust-src --toolchain nightly-aarch64-pc-windows-msvc
          cargo +nightly build --release \
            -Z build-std=core,std,alloc,proc_macro,panic_abort \
            -Z build-std-features=default,panic_immediate_abort,optimize_for_size
      - name: Upload Artifact
        run: |
          source="terracotta-${TERRACOTTA_VERSION}-windows-arm64.exe"
          cp "target/release/terracotta.exe" "$source"
          tar acvf "$source.tar" "$source"
          cat "$source.tar" | gh-actions-artifact-client.js upload "$source"
  linux-x86_64:
    runs-on: ubuntu-latest
    name: Build for Linux x86_64
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install GitHub Artifact Client
        uses: lhotari/gh-actions-artifact-client@v2
      - name: Compute Version
        run: |
          if [ -z "${{ github.event.inputs.version }}" ]; then
            echo "TERRACOTTA_VERSION=${GITHUB_SHA::7}" >> $GITHUB_ENV
          else
            echo "TERRACOTTA_VERSION=${{ github.event.inputs.version }}" >> $GITHUB_ENV
          fi
      - name: Build
        run: |
          rustup target add --toolchain nightly x86_64-unknown-linux-gnu
          rustup component add rust-src --toolchain nightly-x86_64-unknown-linux-gnu
          cargo +nightly build --release \
            -Z build-std=core,std,alloc,proc_macro,panic_abort \
            -Z build-std-features=default,panic_immediate_abort,optimize_for_size
      - name: Upload Artifact
        run: |
          source="terracotta-${TERRACOTTA_VERSION}-linux-x86_64"
          
          cp "target/release/terracotta" "$source"
          chmod 755 "$source"
          tar -cf "$source.tar" "$source"
          zip -q - "$source.tar" | gh-actions-artifact-client.js upload "$source.tar"
          
          wget -O linux-deploy.AppImage https://github.com/linuxdeploy/linuxdeploy/releases/download/continuous/linuxdeploy-x86_64.AppImage
          chmod +x linux-deploy.AppImage
          ./linux-deploy.AppImage --appdir="$(mktemp -d)" \
            --desktop-file=build/linux/terracotta.desktop \
            --icon-file=build/linux/icon.png \
            -e "target/release/terracotta" \
            --output=appimage
          
          mv "Terracotta-x86_64.AppImage" "$source.AppImage"
          chmod 755 "$source.AppImage"
          zip -q - "$source.AppImage" | gh-actions-artifact-client.js upload "$source.AppImage"
  linux-arm64:
    runs-on: ubuntu-24.04-arm
    name: Build for Linux arm64
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install GitHub Artifact Client
        uses: lhotari/gh-actions-artifact-client@v2
      - name: Compute Version
        run: |
          if [ -z "${{ github.event.inputs.version }}" ]; then
            echo "TERRACOTTA_VERSION=${GITHUB_SHA::7}" >> $GITHUB_ENV
          else
            echo "TERRACOTTA_VERSION=${{ github.event.inputs.version }}" >> $GITHUB_ENV
          fi
      - name: Build
        run: |
          rustup target add --toolchain nightly aarch64-unknown-linux-gnu
          rustup component add rust-src --toolchain nightly-aarch64-unknown-linux-gnu
          cargo +nightly build --release \
            -Z build-std=core,std,alloc,proc_macro,panic_abort \
            -Z build-std-features=default,panic_immediate_abort,optimize_for_size
      - name: Upload Artifact
        run: |
          source="terracotta-${TERRACOTTA_VERSION}-linux-arm64"
          
          cp "target/release/terracotta" "$source"
          chmod 755 "$source"
          tar -cf "$source.tar" "$source"
          zip -q - "$source.tar" | gh-actions-artifact-client.js upload "$source.tar"
          
          wget -O linux-deploy.AppImage https://github.com/linuxdeploy/linuxdeploy/releases/download/continuous/linuxdeploy-aarch64.AppImage
          chmod +x linux-deploy.AppImage
          ./linux-deploy.AppImage --appdir="$(mktemp -d)" \
            --desktop-file=build/linux/terracotta.desktop \
            --icon-file=build/linux/icon.png \
            -e "target/release/terracotta" \
            --output=appimage
         
          mv "Terracotta-aarch64.AppImage" "$source.AppImage"
          chmod 755 "$source.AppImage"
          zip -q - "$source.AppImage" | gh-actions-artifact-client.js upload "$source.AppImage"
  macos-x86_64:
    runs-on: macos-13
    name: Build for MacOS x86_64
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install GitHub Artifact Client
        uses: lhotari/gh-actions-artifact-client@v2
      - name: Compute Version
        run: |
          if [ -z "${{ github.event.inputs.version }}" ]; then
            echo "TERRACOTTA_VERSION=${GITHUB_SHA::7}" >> $GITHUB_ENV
          else
            echo "TERRACOTTA_VERSION=${{ github.event.inputs.version }}" >> $GITHUB_ENV
          fi
      - name: Build
        run: |
          rustup target add --toolchain nightly x86_64-apple-darwin
          rustup component add rust-src --toolchain nightly-x86_64-apple-darwin
          cargo +nightly build --release \
            -Z build-std=core,std,alloc,proc_macro,panic_abort \
            -Z build-std-features=default,panic_immediate_abort,optimize_for_size
      - name: Upload Artifact
        run: |
          source="terracotta-${TERRACOTTA_VERSION}-macos-x86_64"
          
          cp "target/release/terracotta" "$source"
          chmod 755 "$source"
          tar -cf "$source.tar" "$source"
          zip -q - "$source.tar" | gh-actions-artifact-client.js upload "$source.tar"
          
          chmod -R 755 build/macos/scripts
          TEMP_DIR=$(mktemp -d)
          mkdir -p "$TEMP_DIR"
          
          cp -R build/macos/terracotta.app "$TEMP_DIR"
          mkdir -p "$TEMP_DIR/terracotta.app/Contents/MacOS/"
          cp "target/release/terracotta" "$TEMP_DIR/terracotta.app/Contents/MacOS/terracotta"
          
          chmod -R 755 "$TEMP_DIR/"
          PKG_OUTPUT="$source.pkg"
          
          pkgbuild \
            --root "$TEMP_DIR" \
            --identifier "net.burningtnt.terracotta" \
            --version "1.0" \
            --install-location "/Applications" \
            --scripts build/macos/scripts \
            --component-plist build/macos/terracotta.plist \
            "$PKG_OUTPUT"
          zip -q - $PKG_OUTPUT | gh-actions-artifact-client.js upload "$source.pkg"
  macos-arm64:
    runs-on: macos-latest
    name: Build for MacOS arm64
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install GitHub Artifact Client
        uses: lhotari/gh-actions-artifact-client@v2
      - name: Compute Version
        run: |
          if [ -z "${{ github.event.inputs.version }}" ]; then
            echo "TERRACOTTA_VERSION=${GITHUB_SHA::7}" >> $GITHUB_ENV
          else
            echo "TERRACOTTA_VERSION=${{ github.event.inputs.version }}" >> $GITHUB_ENV
          fi
      - name: Build
        run: |
          rustup target add --toolchain nightly aarch64-apple-darwin
          rustup component add rust-src --toolchain nightly-aarch64-apple-darwin
          cargo +nightly build --release \
            -Z build-std=core,std,alloc,proc_macro,panic_abort \
            -Z build-std-features=default,panic_immediate_abort,optimize_for_size
      - name: Upload Artifact
        run: |
          source="terracotta-${TERRACOTTA_VERSION}-macos-arm64"
          
          cp "target/release/terracotta" "$source"
          chmod 755 "$source"
          tar -cf "$source.tar" "$source"
          zip -q - "$source.tar" | gh-actions-artifact-client.js upload "$source.tar"
          
          chmod -R 755 build/macos/scripts
          TEMP_DIR=$(mktemp -d)
          mkdir -p "$TEMP_DIR"
          
          cp -R build/macos/terracotta.app "$TEMP_DIR"
          mkdir -p "$TEMP_DIR/terracotta.app/Contents/MacOS/"
          cp "target/release/terracotta" "$TEMP_DIR/terracotta.app/Contents/MacOS/terracotta"
          
          chmod -R 755 "$TEMP_DIR/"
          PKG_OUTPUT="$source.pkg"
          
          pkgbuild \
            --root "$TEMP_DIR" \
            --identifier "net.burningtnt.terracotta" \
            --version "1.0" \
            --install-location "/Applications" \
            --scripts build/macos/scripts \
            --component-plist build/macos/terracotta.plist \
            "$PKG_OUTPUT"
          zip -q - $PKG_OUTPUT | gh-actions-artifact-client.js upload "$source.pkg"
